plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.2-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	/* 웹 애플리케이션 개발을 위한 기본 스타터, 이 의존성은 Spring MVC, RESTful 웹 서비스, 톰캣(기본 내장 서버) 등을 포함 */
	implementation 'org.springframework.boot:spring-boot-starter-web'
	/* REST API에서 HATEOAS(Hypermedia As The Engine Of Application State)를 지원하기 위한 스타터, 리소스 링크를 포함한 응답을 생성 */
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	/* 애플리케이션 모니터링 및 관리 기능을 제공하는 스타터, 다양한 엔드포인트를 통해 애플리케이션의 상태를 점검 */
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	/* 애플리케이션의 보안을 강화하기 위한 스타터, 기본적인 보안 설정을 제공하며, 사용자 인증 및 권한 부여 기능을 포함 */
	implementation 'org.springframework.boot:spring-boot-starter-security'
	/* 애플리케이션에서 입력 데이터의 유효성을 검사하기 위한 스타터, Bean Validation (JSR-380) 규격을 따르며, 유효성 검사 기능을 쉽게 통합 */
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	/* Spring Data REST와 함께 사용되는 HAL(Hypertext Application Language) 브라우저를 제공하여, RESTful 리소스를 쉽게 탐색할 수 있게 해주는 라이브러리 */
	implementation 'org.springframework.data:spring-data-rest-hal-explorer'
	/*JPA(Java Persistence API)를 사용하여 데이터베이스와의 상호 작용을 간편하게 만들어주는 스타터, Hibernate를 기본 구현체로 사용 */
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
